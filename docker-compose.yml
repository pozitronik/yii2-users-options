version: '3.7'
name: 'yii2-users-options'

services:
  postgres:
    container_name: yii2-users-options-postgres
    image: postgres:13.6
    ports:
      - "5432:5432"
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: yii2-users-options-tests
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    volumes:
      - ./docker/postgresql:/var/lib/postgresql/data
      - ./docker/postgresql/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - .:/var/www
      - ./docker/postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  php:
    container_name: yii2-users-options-php
    build: ./docker/
    volumes:
      - .:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      YII_DEBUG: true
      YII_ENV_DEV: true
      YII_ENV: dev
      PHP_IDE_CONFIG: serverName=Docker
      XDEBUG_CONFIG: "client_host=host.docker.internal log_level=0 log=/tmp/xdebug.log"
      DB_DSN: "pgsql:host=postgres;port=5432;dbname=yii2-users-options-tests"
      DB_NAME: yii2-users-options-tests
      DB_USERNAME: root
      DB_PASSWORD: password
    networks:
      - backend

# Networks Setup
networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.2.0/28